/* vim: set ft=cpp: */

#include "macro.h"
#include "system.h"
#include "utils.h"
#include "keycodes.h"
#include "prompt.h"
#include "printer.h"
#include "strings.h"

#pragma title Manage Pdfmark Annotations

// The default selected menu option.
assign(option, 0)

// Draw all the menu options.
// Syntax: call(drawmenu, xpos, ypos, width)
function(drawmenu,
    // Choose Menu position.
    $pop(width)
    $pop(ypos)
    $pop(xpos)

    // Select the current entry.
    assign(entry, -1)

    // Most drawing and positioning commands only work inside prompt().
    prompt(
        clrscreen()
        attrclr()
        boxtop($(xpos), $(ypos), $(width))
    )

    // Move to the next line.
    $inc(ypos)

    // Draw a header.
    prompt(boxtxt($(xpos),
                  $(ypos),
                  $(width),
                  bold(`Please Select an Option...`)))

    // Draw the menu entries.
    foreach(msg,
        `Name the current location`,
        `Link to a named location`,
        `Add a PDF annotation`)

        // Move to the next line.
        $inc(ypos) $inc(entry)

        // If this option is active, highlight it.
        if ($(option) = $(entry))
            // This draws the option in reverse video.
            prompt(boxsel($(xpos), $(ypos), $(width), $(msg)))
        else
            prompt(boxtxt($(xpos), $(ypos), $(width), $(msg)))
        endif
    endfor

    // Draw the bottom of the menu box.
    $inc(ypos)
    prompt(boxbot($(xpos), $(ypos), $(width)))

    // Move the cursor out of the way.
    prompt(curshome())

    // If we never found an active entry, scroll around to top and try again.
    if ($(option) < 0 $or $(option) > $(entry))
        assign(option, 0)
        call(drawmenu, $(xpos), $(ypos) - $(entry) - 3, $(width))
    endif
)

// Choose the next option above.
function(menuup,
    $dec(option)
    call(drawmenu, 5, 5, 60)
)

// Choose the next option down.
function(menudown,
    $inc(option)
    call(drawmenu, 5, 5, 60)
)

// Add a PDF named location.
function(namelocation,
    text(destname, `Enter name of current location (e.g. MyLocation): `)

    // Check that anything was entered.
    if ($len(destname) = 0)
        status(`Error: location name required`) wait(30) status(``)
        goto(namelocation)
    endif

    // Use a printer command to add a PDF name
    postscript(`_DU [ /Dest /$(destname) /View [/XYZ DUx DUy 0] /DEST pdfmark`)
)

// Add a Link to a named location.
function(createlink,

    text(destname, `Enter name of location (e.g. MyLocation): `)
    text(linktext, (`Enter link to display (e.g. page 2) `))

    // Check that anything was entered.
    if ($len(destname) = 0 $or $len(linktext) = 0)
        status(`Error: location name required`) wait(30) status(``)
        goto(createlink)
    endif

    postscript(`gsave ($(linktext)) true charpath flattenpath `
               `[ /Rect [ pathbbox ] /Dest /$(destname) /Subtype /Link /ANN pdfmark `
               `grestore`
    )

    $(linktext)
)

function(addcomment,
    text(comment, `Enter Comment: `)

    if ($len(comment) = 0)
        status(`Error: no comment entered`) wait(30) status(``)
        return(-1)
    endif

    postscript(`[ /Contents ($(comment)) /Rect [ currentpoint currentpoint ] /ANN pdfmark `)
)

// Choose the hilighted option.
function(menuquit,
    // Remove any menu junk left on the screen.
    prompt(clrscreen())

    // Dispatch result.
    casecall ($(option))
        match(0, namelocation)
        match(1, createlink)
        match(2, addcomment)
    endcase

    // All done.
    quit()
)

// Draw the base menu.
call(drawmenu, 5, 5, 60)

// Wait for a key press.
while ($true)
    char(key,``)

    // Dispatch the read key to a handler.
    casecall ($(key))
        match({up}, menuup)
        match({down}, menudown)
        match({enter}, menuquit)
    endcase
endwhile
